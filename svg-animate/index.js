// Generated by LiveScript 1.2.0
var main;
main = function($scope){
  var ns, svg;
  ns = "http://www.w3.org/2000/svg";
  svg = document.getElementById('svg');
  import$($scope, {
    curR: 20,
    oldR: 20,
    reuseAni: true,
    animate: {
      wrap: function(name, src, des, dur){
        var cur, st, _animate;
        cur = src;
        st = new Date().getTime();
        _animate = function(){
          var ct, ratio, ref$, v;
          ct = new Date().getTime();
          ratio = (ref$ = (ct - st) / dur) < 1 ? ref$ : 1;
          v = cur + (des - src) * ratio;
          $scope.$apply(function(){
            return $scope.$eval(name + " = " + v);
          });
          if (ratio < 1) {
            return setTimeout(_animate, 10);
          }
        };
        return setTimeout(_animate, 0);
      },
      begin: 0
    },
    newAni: function(){
      var x$;
      x$ = document.createElementNS(ns, 'animate');
      x$.setAttribute('attributeName', 'r');
      x$.setAttribute('dur', '1s');
      x$.setAttribute('begin', 'indefinite');
      x$.setAttribute('end', 'indefinite');
      x$.setAttribute('fill', 'freeze');
      return x$;
    }
  });
  $scope.jsSmil = document.getElementById('js-smil');
  $scope.jsSmilAni = $scope.newAni();
  $scope.jsSmil.appendChild($scope.jsSmilAni);
  $scope.d3Anim = d3.select('#d3-anim');
  $scope.verbose = function(it){
    return parseInt(it) * 5;
  };
  return setInterval(function(){
    return $scope.$apply(function(){
      var cc, x$, y$;
      $scope.oldR = $scope.curR;
      $scope.curR = Math.random() * 50;
      $scope.animate.begin = svg.getCurrentTime();
      $scope.jsSmil.removeChild($scope.jsSmilAni);
      if (!$scope.reuseAni) {
        $scope.jsSmilAni = $scope.newAni();
      }
      cc = svg.getCurrentTime();
      x$ = $scope.jsSmilAni;
      x$.setAttribute("from", $scope.oldR);
      x$.setAttribute("to", $scope.curR);
      x$.beginElementAt(cc);
      x$.endElementAt(cc + 1.5);
      y$ = $scope.jsSmil;
      y$.appendChild($scope.jsSmilAni);
      y$.setAttribute('r', $scope.curR);
      $scope.d3Anim.transition().ease('linear').duration(1000).attr('r', function(){
        return $scope.curR;
      });
      return $scope.animate.wrap('animate.r', $scope.oldR, $scope.curR, 1000);
    });
  }, 1000);
};
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}